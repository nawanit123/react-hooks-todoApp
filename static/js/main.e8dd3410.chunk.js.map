{"version":3,"sources":["Hooks/useLocalStorage.js","Hooks/useInputState.js","EditTodoForm.js","Todo.js","Hooks/useToggle.js","TodoList.js","TodoForm.js","TodoApp.js","Hooks/useTodos.js","App.js","serviceWorker.js","index.js"],"names":["useLocalStorage","key","defaultVal","useState","val","JSON","parse","window","localStorage","getItem","String","e","state","setState","useEffect","setItem","stringify","useInputState","initialVal","target","value","EditTodoForm","id","task","editTodo","toggleEditForm","handleChange","reset","onSubmit","preventDefault","style","marginLeft","width","TextField","onChange","margin","fullWidth","autoFocus","Todo","complete","removeTodo","toggleTodo","toggle","useToggleState","isEditing","ListItem","height","Checkbox","tabIndex","checked","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","todos","length","Paper","List","map","todo","i","Fragment","Divider","TodoForm","props","addTodo","padding","label","TodoApp","initialTodos","setTodos","newTodoText","uuidv4","removeId","filter","todoId","newTask","useTodos","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oRAoBeA,MAlBf,SAAyBC,EAAKC,GAAa,IAAD,EACdC,oBAAS,WACjC,IAAIC,EACJ,IACEA,EAAMC,KAAKC,MACTC,OAAOC,aAAaC,QAAQ,QAAUC,OAAOR,IAE/C,MAAOS,GACPP,EAAMF,EAER,OAAOE,KAV+B,mBACjCQ,EADiC,KAC1BC,EAD0B,KAexC,OAHAC,qBAAU,WACRP,OAAOC,aAAaO,QAAQ,MAAOV,KAAKW,UAAUJ,MACjD,CAACA,IACG,CAACA,EAAOC,I,sECJFI,MAXf,SAAuBC,GAAa,IAAD,EACPf,mBAASe,GADF,mBAC1BN,EAD0B,KACnBC,EADmB,KAQjC,MAAO,CAACD,EANa,SAACD,GACpBE,EAASF,EAAEQ,OAAOC,QAEN,WACZP,EAAS,O,SCsBEQ,MA1Bf,YAA+D,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,eAAkB,EACvBR,EAAcM,GADS,mBACrDH,EADqD,KAC9CM,EAD8C,KAChCC,EADgC,KAE5D,OACE,0BACEC,SAAU,SAACjB,GACTA,EAAEkB,iBACFL,EAASF,EAAIF,GACbO,IACAF,KAEFK,MAAO,CACLC,WAAY,OACZC,MAAO,QAGT,kBAACC,EAAA,EAAD,CACEb,MAAOA,EACPc,SAAUR,EACVS,OAAO,SACPC,WAAS,EACTC,WAAS,M,+EC2BFC,MAtCf,YAAyE,IAAzDf,EAAwD,EAAxDA,KAAMD,EAAkD,EAAlDA,GAAIiB,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,WAAYjB,EAAY,EAAZA,SAAY,ECXzD,WAAyB,IAAxBN,EAAuB,0DACXf,mBAASe,GADE,mBAC9BN,EAD8B,KACvBC,EADuB,KAG/B6B,EAAS,kBAAM7B,GAAUD,IAE/B,MAAO,CAACA,EAAO8B,GDOaC,EAAe,GAD2B,mBAC/DC,EAD+D,KACpDF,EADoD,KAGtE,OACE,kBAACG,EAAA,EAAD,CAAUf,MAAO,CAAEgB,OAAQ,SACxBF,EACC,kBAAC,EAAD,CACEtB,GAAIA,EACJC,KAAMA,EACNC,SAAUA,EACVC,eAAgBiB,IAGlB,oCACE,kBAACK,EAAA,EAAD,CACEC,UAAW,EACXC,QAASV,EACTW,QAAS,kBAAMT,EAAWnB,MAE5B,kBAAC6B,EAAA,EAAD,CACErB,MAAO,CAAEsB,eAAgBb,EAAW,eAAiB,SAEpDhB,GAEH,kBAAC8B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,aAAW,SAASL,QAAS,kBAAMV,EAAWlB,KACxD,kBAAC,IAAD,OAEF,kBAACgC,EAAA,EAAD,CAAYC,aAAW,OAAOL,QAAS,kBAAMR,EAAOpB,KAClD,kBAAC,IAAD,WEfCkC,MAxBf,YAAgE,IAA5CC,EAA2C,EAA3CA,MAAOjB,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,WAAYjB,EAAY,EAAZA,SACjD,OAAIiC,EAAMC,OAEN,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGH,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACT,kBAAC,IAAMC,SAAP,CAAgB/D,IAAK6D,EAAKxC,IACxB,kBAAC,EAAD,iBACMwC,EADN,CAEE7D,IAAK6D,EAAKxC,GACViB,SAAUuB,EAAKvB,SACfC,WAAYA,EACZC,WAAYA,EACZjB,SAAUA,KAEXuC,EAAIN,EAAMC,OAAS,GAAK,kBAACO,EAAA,EAAD,YAM9B,MCGMC,MAxBf,SAAkBC,GAAQ,IAAD,EACclD,EAAc,IAD5B,mBAChBG,EADgB,KACTM,EADS,KACKC,EADL,KAEfyC,EAAYD,EAAZC,QACR,OACE,kBAACT,EAAA,EAAD,CAAO7B,MAAO,CAAEK,OAAQ,SAAUkC,QAAS,WACzC,0BACEzC,SAAU,SAACjB,GACTA,EAAEkB,iBACFuC,EAAQhD,GACRO,MAGF,kBAACM,EAAA,EAAD,CACEb,MAAOA,EACPc,SAAUR,EACVS,OAAO,SACPmC,MAAM,YACNlC,WAAS,O,MCuBJmC,MApCf,SAAiBJ,GACf,IADsB,ECJT,SAACK,GAAkB,IAAD,EACLxE,EAAgB,QAASwE,GADpB,mBACxBf,EADwB,KACjBgB,EADiB,KAE/B,MAAO,CACLhB,QACAW,QAAS,SAACM,GAAD,OACPD,EAAS,GAAD,mBACHhB,GADG,CAEN,CAAEnC,GAAIqD,cAAUpD,KAAMmD,EAAanC,UAAU,OAEjDC,WAAY,SAACoC,GAAD,OACVH,EAAShB,EAAMoB,QAAO,SAACf,GAAD,OAAUA,EAAKxC,KAAOsD,OAC9CnC,WAAY,SAACqC,GAAD,OACVL,EACEhB,EAAMI,KAAI,SAACC,GAAD,OACRA,EAAKxC,KAAOwD,EAAZ,2BAA0BhB,GAA1B,IAAgCvB,UAAWuB,EAAKvB,WAAauB,OAGnEtC,SAAU,SAACsD,EAAQC,GAAT,OACRN,EACEhB,EAAMI,KAAI,SAACC,GAAD,OACRA,EAAKxC,KAAOwD,EAAZ,2BAA0BhB,GAA1B,IAAgCvC,KAAMwD,IAAYjB,QDdGkB,CADxC,CAAC,CAAE1D,GAAI,EAAGC,KAAM,eAAgBgB,UAAU,KACvDkB,EAFc,EAEdA,MAAOW,EAFO,EAEPA,QAAS5B,EAFF,EAEEA,WAAYC,EAFd,EAEcA,WAAYjB,EAF1B,EAE0BA,SAIhD,OACE,kBAACmC,EAAA,EAAD,CACE7B,MAAO,CACLgB,OAAQ,QACRX,OAAQ,IACRkC,QAAS,IACTY,gBAAiB,SAEnBC,UAAW,GAEX,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,SAAS,SAASvD,MAAO,CAAEgB,OAAQ,SACzD,kBAACwC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYH,MAAM,WAAlB,sBAGJ,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAS5D,MAAO,CAAE6D,UAAW,SACnD,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,EAAD,CAAU3B,QAASA,IACnB,kBAAC,EAAD,CACEX,MAAOA,EACPjB,WAAYA,EACZC,WAAYA,EACZjB,SAAUA,Q,ME3BPwE,MAJf,WACE,OAAO,kBAAC,EAAD,OCOWC,QACW,cAA7B1F,OAAO2F,SAASC,UAEe,UAA7B5F,OAAO2F,SAASC,UAEhB5F,OAAO2F,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e8dd3410.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction useLocalStorage(key, defaultVal) {\r\n  const [state, setState] = useState(() => {\r\n    let val;\r\n    try {\r\n      val = JSON.parse(\r\n        window.localStorage.getItem('key') || String(defaultVal)\r\n      );\r\n    } catch (e) {\r\n      val = defaultVal;\r\n    }\r\n    return val;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem('key', JSON.stringify(state));\r\n  }, [state]);\r\n  return [state, setState];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { useState } from 'react';\r\n\r\nfunction useInputState(initialVal) {\r\n  const [state, setState] = useState(initialVal);\r\n  const handleChange = (e) => {\r\n    setState(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setState('');\r\n  };\r\n  return [state, handleChange, reset];\r\n}\r\n\r\nexport default useInputState;\r\n","import React from 'react';\r\nimport useInputState from './Hooks/useInputState';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nfunction EditTodoForm({ id, task, editTodo, toggleEditForm }) {\r\n  const [value, handleChange, reset] = useInputState(task);\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        editTodo(id, value);\r\n        reset();\r\n        toggleEditForm();\r\n      }}\r\n      style={{\r\n        marginLeft: '1rem',\r\n        width: '50%',\r\n      }}\r\n    >\r\n      <TextField\r\n        value={value}\r\n        onChange={handleChange}\r\n        margin=\"normal\"\r\n        fullWidth\r\n        autoFocus\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditTodoForm;\r\n","import React from 'react';\r\nimport useToggleState from './Hooks/useToggle';\r\nimport EditTodoForm from './EditTodoForm';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Checkbox,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction Todo({ task, id, complete, removeTodo, toggleTodo, editTodo }) {\r\n  const [isEditing, toggle] = useToggleState(false);\r\n\r\n  return (\r\n    <ListItem style={{ height: '64px' }}>\r\n      {isEditing ? (\r\n        <EditTodoForm\r\n          id={id}\r\n          task={task}\r\n          editTodo={editTodo}\r\n          toggleEditForm={toggle}\r\n        />\r\n      ) : (\r\n        <>\r\n          <Checkbox\r\n            tabIndex={-1}\r\n            checked={complete}\r\n            onClick={() => toggleTodo(id)}\r\n          />\r\n          <ListItemText\r\n            style={{ textDecoration: complete ? 'line-through' : 'none' }}\r\n          >\r\n            {task}\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton aria-label=\"Delete\" onClick={() => removeTodo(id)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"Edit\" onClick={() => toggle(id)}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </>\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import { useState } from 'react';\r\n\r\nexport default (initialVal = false) => {\r\n  const [state, setState] = useState(initialVal);\r\n\r\n  const toggle = () => setState(!state);\r\n\r\n  return [state, toggle];\r\n};\r\n","import React from 'react';\r\nimport { Paper, List, Divider } from '@material-ui/core';\r\nimport Todo from './Todo';\r\nfunction TodoList({ todos, removeTodo, toggleTodo, editTodo }) {\r\n  if (todos.length)\r\n    return (\r\n      <Paper>\r\n        <List>\r\n          {todos.map((todo, i) => (\r\n            <React.Fragment key={todo.id}>\r\n              <Todo\r\n                {...todo}\r\n                key={todo.id}\r\n                complete={todo.complete}\r\n                removeTodo={removeTodo}\r\n                toggleTodo={toggleTodo}\r\n                editTodo={editTodo}\r\n              />\r\n              {i < todos.length - 1 && <Divider />}\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    );\r\n  return null;\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { Paper, TextField } from '@material-ui/core';\r\nimport useInputState from './Hooks/useInputState';\r\nfunction TodoForm(props) {\r\n  const [value, handleChange, reset] = useInputState('');\r\n  const { addTodo } = props;\r\n  return (\r\n    <Paper style={{ margin: '1rem 0', padding: '0 1rem' }}>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addTodo(value);\r\n          reset();\r\n        }}\r\n      >\r\n        <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          label=\"Add to do\"\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\nimport useTodos from './Hooks/useTodos';\r\nimport { Paper, AppBar, Toolbar, Typography, Grid } from '@material-ui/core';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\nimport 'fontsource-roboto';\r\n\r\nfunction TodoApp(props) {\r\n  const initialTodos = [{ id: 1, task: 'Pet a monkey', complete: false }];\r\n  const { todos, addTodo, removeTodo, toggleTodo, editTodo } = useTodos(\r\n    initialTodos\r\n  );\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        height: '100vh',\r\n        margin: '0',\r\n        padding: '0',\r\n        backgroundColor: 'white',\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <AppBar color=\"primary\" position=\"static\" style={{ height: '64px' }}>\r\n        <Toolbar>\r\n          <Typography color=\"inherit\">REACT HOOKS TODO</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid container justify=\"center\" style={{ marginTop: '1rem' }}>\r\n        <Grid item xs={11} md={8} lg={4}>\r\n          <TodoForm addTodo={addTodo} />\r\n          <TodoList\r\n            todos={todos}\r\n            removeTodo={removeTodo}\r\n            toggleTodo={toggleTodo}\r\n            editTodo={editTodo}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n","import useLocalStorage from './useLocalStorage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default (initialTodos) => {\r\n  const [todos, setTodos] = useLocalStorage('todos', initialTodos);\r\n  return {\r\n    todos,\r\n    addTodo: (newTodoText) =>\r\n      setTodos([\r\n        ...todos,\r\n        { id: uuidv4(), task: newTodoText, complete: false },\r\n      ]),\r\n    removeTodo: (removeId) =>\r\n      setTodos(todos.filter((todo) => todo.id !== removeId)),\r\n    toggleTodo: (todoId) =>\r\n      setTodos(\r\n        todos.map((todo) =>\r\n          todo.id === todoId ? { ...todo, complete: !todo.complete } : todo\r\n        )\r\n      ),\r\n    editTodo: (todoId, newTask) =>\r\n      setTodos(\r\n        todos.map((todo) =>\r\n          todo.id === todoId ? { ...todo, task: newTask } : todo\r\n        )\r\n      ),\r\n  };\r\n};\r\n","import React from 'react';\nimport TodoApp from './TodoApp.js';\nimport './App.css';\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}